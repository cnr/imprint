#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        Qwerty_Layer {
            bindings = <
&kp ESC           &kp F1  &kp F2    &kp F3    &kp F4          &kp F5                          &kp F6             &kp F7    &kp F8           &kp F9    &kp F10        &kp F11
&kp GRAVE         &kp N1  &kp N2    &kp N3    &kp N4          &kp N5                          &kp N6             &kp N7    &kp N8           &kp N9    &kp N0         &kp MINUS
&kp TAB           &kp Q   &kp W     &kp E     &kp R           &kp T                           &kp Y              &kp U     &kp I            &kp O     &kp P          &kp BSLH
&mo 3             &kp A   &kp S     &kp D     &kp F           &kp G                           &kp H              &kp J     &kp K            &kp L     &kp SEMICOLON  &kp SQT
&kp LSHFT         &kp Z   &kp X     &kp C     &kp V           &kp B                           &kp N              &kp M     &kp COMMA        &kp DOT   &kp FSLH       &kp RSHFT
&kp LEFT_CONTROL  &trans  &kp LGUI  &kp LALT  &trans                                                             &trans    &kp LBKT         &kp RBKT  &trans         &trans
                                              &kp RET         &kp ESCAPE  &kp LEFT_COMMAND    &kp RIGHT_COMMAND  &kp BSPC  &kp SPACE
                                              &kp LEFT_SHIFT  &mo 2       &kp LEFT_ALT        &kp RIGHT_ALT      &mo 3     &kp RIGHT_SHIFT
            >;
        };

        Colemak_Layer {
            bindings = <
&kp ESC           &kp F1  &kp F2    &kp F3    &kp F4          &kp F5                          &kp F6             &kp F7    &kp F8           &kp F9    &kp F10        &kp F11
&kp GRAVE         &kp N1  &kp N2    &kp N3    &kp N4          &kp N5                          &kp N6             &kp N7    &kp N8           &kp N9    &kp N0         &kp MINUS
&kp TAB           &kp Q   &kp W     &kp F     &kp P           &kp B                           &kp J              &kp L     &kp U            &kp Y     &kp SEMICOLON  &kp BSLH
&mo 3             &kp A   &kp R     &kp S     &kp T           &kp G                           &kp M              &kp N     &kp E            &kp I     &kp O          &kp SQT
&kp LSHFT         &kp Z   &kp X     &kp C     &kp D           &kp V                           &kp K              &kp H     &kp COMMA        &kp DOT   &kp FSLH       &kp RSHFT
&kp LEFT_CONTROL  &trans  &kp LGUI  &kp LALT  &trans                                                             &trans    &kp LBKT         &kp RBKT  &trans         &trans
                                              &kp RET         &kp ESCAPE  &kp LEFT_COMMAND    &kp RIGHT_COMMAND  &kp BSPC  &kp SPACE
                                              &kp LEFT_SHIFT  &mo 2       &kp LEFT_ALT        &kp RIGHT_ALT      &mo 3     &kp RIGHT_SHIFT
            >;
        };

        Symbols_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                &trans                 &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans          &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp PLUS
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS       &kp EQUAL
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &trans  &trans  &kp LESS_THAN         &kp GREATER_THAN       &trans          &trans
&trans  &trans  &trans  &kp N0  &trans                            &trans  &trans                &trans                 &trans          &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans  &trans  &trans      &trans             &trans           &trans            &trans        &trans        &trans        &trans     &trans  &trans
&trans  &trans  &trans      &trans             &trans           &trans            &trans        &trans        &trans        &trans     &trans  &trans
&trans  &trans  &trans      &trans             &trans           &trans            &trans        &trans        &trans        &trans     &trans  &trans
&trans  &trans  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans            &kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans      &trans             &trans           &trans            &trans        &trans        &trans        &trans     &trans  &trans
&trans  &trans  &trans      &trans             &trans                                           &trans        &trans        &trans     &sl 1   &sl 0
                                               &trans           &trans  &trans    &bt BT_CLR    &trans        &trans
                                               &bootloader      &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &mkp MCLK  &mkp RCLK  &mkp LCLK  &trans            &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                                  &trans     &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &mkp LCLK  &mkp RCLK  &trans
                                      &trans     &trans  &trans    &trans     &trans     &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

//right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        <&zip_xy_scaler 1 3>,

        // activate layer 4 within 500ms of the trackball moving
        <&zip_temp_layer 4 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,
        //<&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
